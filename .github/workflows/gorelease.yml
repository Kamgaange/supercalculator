name: gorelease

on:
  push:
    tags:
    #déclenche le workflow lorsqu'un un tag est poussé
      - '*'
   #déclenche le workflow manuellement   
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: recupere le code du depot
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: configure go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: construire et empaqueter gorelease
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          workdir: super_calculator/super_calculator/
          args: release --snapshot --clean
        env:
        #accéder au token d'authentification de github
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Connexion docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} #nom d'authentification Dockerhub
          password: ${{ secrets.DOCKERHUB_TOKEN }} #toke d'authentification Dockerhub
      - name: Creer une image docker et le push sur docker hub
        uses: docker/build-push-action@v2
        with:
          context: ./super_calculator
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/supercalculator:1.1.5
      - name: Creer le release Github
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          tag_name: 'v1.1.5' #nom de la tag pour le release
          release_name: 'Release 1.1.5' #nom du release
          #ne pas mettre le release dans le brouillon
          draft: false
          # le release n'a pas de version préliminaire
          prerelease: false
      - name: telecharger le release artifact
      #telecharge l'artefact de la release
        uses: actions/upload-artifact@v2
        with:
          name: my-release-artifact
          path: dist/
